apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'kotlin-kapt'
apply from: '../dependencies.gradle'

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.beyondthecode.pokekot"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.compileSdk
        versionCode versions.versionCode
        versionName versions.versionName
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation" : "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    buildFeatures {
        dataBinding = true
    }
    androidExtensions {
        experimental = true
    }

    sourceSets {
        androidTest.java.srcDirs += "src/test-common/java"
        test.java.srcDirs += "src/test-common/java"
        test.assets.srcDirs += files("$projectDir/schemas".toString())
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude("META-INF/*.kotlin_module")
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "com.google.android.material:material:$versions.materialVersion"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // architecture components
    implementation "androidx.fragment:fragment-ktx:$versions.fragmentVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$versions.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$versions.lifecycleVersion"
    implementation "androidx.room:room-runtime:$versions.roomVersion"
    kapt "androidx.room:room-compiler:$versions.roomVersion"

    // startup
    implementation "androidx.startup:startup-runtime:$versions.startupVersion"

    // dagger
    implementation "com.google.dagger:hilt-android:$versions.daggerHiltAndroidVersion"
    implementation "androidx.hilt:hilt-common:$versions.daggerHiltVersion"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$versions.daggerHiltVersion"
    kapt "com.google.dagger:hilt-android-compiler:$versions.daggerHiltAndroidVersion"
    kapt "androidx.hilt:hilt-compiler:$versions.daggerHiltVersion"

    // network
    implementation "com.github.skydoves:sandwich:$versions.sandwichVersion"
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$versions.retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.okhttpVersion"

    // moshi
    implementation "com.squareup.moshi:moshi-kotlin:$versions.moshiVersion"
    implementation "com.squareup.moshi:moshi-kotlin-codegen:$versions.moshiVersion"

    // coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutinesVersion"

    // adapter
    implementation "com.github.skydoves:baserecyclerviewadapter:$versions.baseAdapter"

    // gradation
    implementation "com.github.skydoves:rainbow:$versions.rainbowVersion"

    // glide
    implementation "com.github.bumptech.glide:glide:$versions.glideVersion"
    implementation "com.github.florent37:glidepalette:$versions.glidePaletteVersion"
    kapt "com.github.bumptech.glide:compiler:$versions.glideVersion"

    // debugging
    implementation "com.jakewharton.timber:timber:$versions.timberVersion"

    // transformation
    implementation "com.github.skydoves:transformationlayout:$versions.transformationLayout"

    // custom views
    implementation "com.github.skydoves:androidribbon:$versions.androidRibbonVersion"
    implementation "com.github.skydoves:progressview:$versions.progressViewVersion"


}